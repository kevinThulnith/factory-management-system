# Generated by Django 5.2 on 2025-04-22 05:39

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='code')),
                ('unit_of_measurement', models.CharField(blank=True, max_length=50, null=True, verbose_name='unit of measurement')),
                ('specifications', models.JSONField(default=dict, verbose_name='specifications')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DISCONTINUED', 'Discontinued')], default='ACTIVE', max_length=20, verbose_name='status')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ManufacturingProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('standard_time', models.DurationField()),
                ('quality_parameters', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='api_manufac_name_6a4f6b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductionLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('production_capacity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='production capacity')),
                ('operational_status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('MAINTENANCE', 'Under Maintenance')], default='ACTIVE', max_length=20, verbose_name='operational status')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('machines', models.ManyToManyField(blank=True, related_name='production_lines', to='api.machine', verbose_name='machines')),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_lines', to='api.workshop', verbose_name='workshop')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductionSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='quantity')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='SCHEDULED', max_length=20, verbose_name='status')),
                ('uodated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_schedules', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='production_schedules', to='api.product', verbose_name='product')),
                ('production_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_schedules', to='api.productionline', verbose_name='production line')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='ProductProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField(default=1, verbose_name='sequence')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_processes', to='api.manufacturingprocess', verbose_name='process')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_processes', to='api.product', verbose_name='product')),
            ],
            options={
                'ordering': ['sequence'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='manufacturing_processes',
            field=models.ManyToManyField(blank=True, null=True, related_name='products', through='api.ProductProcess', to='api.manufacturingprocess', verbose_name='manufacturing processes'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('actual_end_date', models.DateField(blank=True, null=True, verbose_name='actual end date')),
                ('project_status', models.CharField(choices=[('PLANNING', 'Planning'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('ON_HOLD', 'On Hold'), ('CANCELLED', 'Cancelled')], default='PLANNING', max_length=20, verbose_name='project status')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('project_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_projects', to=settings.AUTH_USER_MODEL, verbose_name='project manager')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='SkillMatrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('category', models.CharField(choices=[('TECHNICAL', 'Technical'), ('MECHANICAL', 'Mechanical'), ('ELECTRICAL', 'Electrical'), ('SOFTWARE', 'Software'), ('MANAGEMENT', 'Management'), ('ADMINISTRATION', 'Administration'), ('QUALITY_CONTROL', 'Quality Control'), ('SAFETY', 'Safety'), ('LOGISTICS', 'Logistics'), ('MAINTENANCE', 'Maintenance'), ('OPERATIONS', 'Operations'), ('DESIGN', 'Design'), ('OTHER', 'Other')], default='OTHER', max_length=50)),
                ('level', models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced'), ('EXPERT', 'Expert')], default='BEGINNER', max_length=50)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'skill matrix',
                'verbose_name_plural': 'skill matrices',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('actual_end_date', models.DateField(blank=True, null=True, verbose_name='actual end date')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('BLOCKED', 'Blocked'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20, verbose_name='status')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='assigned to')),
                ('dependencies', models.ManyToManyField(blank=True, related_name='dependent_tasks', to='api.task', verbose_name='dependencies')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.project', verbose_name='project')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='LaborAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours_allocated', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='hours allocated')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='date')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labor_allocations', to=settings.AUTH_USER_MODEL, verbose_name='employee')),
                ('production_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='labor_allocations', to='api.productionline', verbose_name='production line')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='labor_allocations', to='api.project', verbose_name='project')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='labor_allocations', to='api.task', verbose_name='task')),
            ],
        ),
        migrations.AddIndex(
            model_name='productionline',
            index=models.Index(fields=['name'], name='api_product_name_4ff69e_idx'),
        ),
        migrations.AddIndex(
            model_name='productionline',
            index=models.Index(fields=['operational_status'], name='api_product_operati_b0a1a7_idx'),
        ),
        migrations.AddIndex(
            model_name='productionschedule',
            index=models.Index(fields=['production_line', 'status'], name='api_product_product_31dc48_idx'),
        ),
        migrations.AddIndex(
            model_name='productionschedule',
            index=models.Index(fields=['product', 'status'], name='api_product_product_e8e477_idx'),
        ),
        migrations.AddIndex(
            model_name='productprocess',
            index=models.Index(fields=['product', 'process'], name='api_product_product_dfba1b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productprocess',
            unique_together={('product', 'process', 'sequence')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='api_product_name_73c704_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['code'], name='api_product_code_7b24f4_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['status'], name='api_product_status_feb151_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['project_manager', 'project_status'], name='api_project_project_06a5dd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='skillmatrix',
            unique_together={('employee', 'name')},
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['project', 'status'], name='api_task_project_9ce1c5_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['assigned_to', 'status'], name='api_task_assigne_07e67b_idx'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('name', 'project'), name='unique_task_name_per_project'),
        ),
        migrations.AddIndex(
            model_name='laborallocation',
            index=models.Index(fields=['employee', 'date'], name='api_laboral_employe_10850c_idx'),
        ),
        migrations.AddIndex(
            model_name='laborallocation',
            index=models.Index(fields=['project', 'date'], name='api_laboral_project_4d60ce_idx'),
        ),
        migrations.AddIndex(
            model_name='laborallocation',
            index=models.Index(fields=['task', 'date'], name='api_laboral_task_id_31f731_idx'),
        ),
        migrations.AddIndex(
            model_name='laborallocation',
            index=models.Index(fields=['production_line', 'date'], name='api_laboral_product_450faa_idx'),
        ),
        migrations.AddConstraint(
            model_name='laborallocation',
            constraint=models.CheckConstraint(condition=models.Q(('project__isnull', False), ('task__isnull', False), ('production_line__isnull', False), _connector='OR'), name='labor_allocation_has_target'),
        ),
        migrations.AddConstraint(
            model_name='laborallocation',
            constraint=models.UniqueConstraint(condition=models.Q(('project__isnull', False)), fields=('employee', 'date', 'project'), name='unique_allocation_per_employee_date_project'),
        ),
        migrations.AddConstraint(
            model_name='laborallocation',
            constraint=models.UniqueConstraint(condition=models.Q(('task__isnull', False)), fields=('employee', 'date', 'task'), name='unique_allocation_per_employee_date_task'),
        ),
        migrations.AddConstraint(
            model_name='laborallocation',
            constraint=models.UniqueConstraint(condition=models.Q(('production_line__isnull', False)), fields=('employee', 'date', 'production_line'), name='unique_allocation_per_employee_date_production_line'),
        ),
    ]
